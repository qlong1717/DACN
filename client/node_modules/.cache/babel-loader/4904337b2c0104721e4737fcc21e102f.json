{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0110\\u1ED3 \\xE1n Chuy\\u1EC1n Ng\\xE0nh\\\\DACN\\\\client\\\\src\\\\pages\\\\Chat\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\nimport Conversation from \"../../components/Coversation/Conversation\";\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\";\nimport NavIcons from \"../../components/NavIcons/NavIcons\";\nimport \"./Chat.css\";\nimport { useEffect } from \"react\";\nimport { userChats } from \"../../api/ChatRequests\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const socket = useRef();\n  const {\n    user\n  } = useSelector(state => state.authReducer.authData);\n  const [chats, setChats] = useState([]);\n  const [onlineUsers, setOnlineUsers] = useState([]);\n  const [currentChat, setCurrentChat] = useState(null);\n  const [sendMessage, setSendMessage] = useState(null);\n  const [receivedMessage, setReceivedMessage] = useState(null); // Get the chat in chat section\n\n  useEffect(() => {\n    const getChats = async () => {\n      try {\n        const {\n          data\n        } = await userChats(user._id);\n        setChats(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    getChats();\n  }, [user._id]); // Connect to Socket.io\n\n  useEffect(() => {\n    socket.current = io(\"ws://localhost:8800\");\n    socket.current.emit(\"new-user-add\", user._id);\n    socket.current.on(\"get-users\", users => {\n      setOnlineUsers(users);\n    });\n  }, [user]); // Send Message to socket server\n\n  useEffect(() => {\n    if (sendMessage !== null) {\n      socket.current.emit(\"send-message\", sendMessage);\n    }\n  }, [sendMessage]); // Get the message from socket server\n\n  useEffect(() => {\n    socket.current.on(\"recieve-message\", data => {\n      console.log(data);\n      setReceivedMessage(data);\n    });\n  }, []);\n\n  const checkOnlineStatus = chat => {\n    const chatMember = chat.members.find(member => member !== user._id);\n    const online = onlineUsers.find(user => user.userId === chatMember);\n    return online ? true : false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chat\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Left-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(LogoSearch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Chat-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Chats\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Chat-list\",\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => {\n              setCurrentChat(chat);\n            },\n            children: /*#__PURE__*/_jsxDEV(Conversation, {\n              data: chat,\n              currentUser: user._id,\n              online: checkOnlineStatus(chat)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Right-side-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"20rem\",\n          alignSelf: \"flex-end\"\n        },\n        children: /*#__PURE__*/_jsxDEV(NavIcons, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n        chat: currentChat,\n        currentUser: user._id,\n        setSendMessage: setSendMessage,\n        receivedMessage: receivedMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"tcQkYmAsKvFRPt4CbU2/eRdJDDg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["D:/Đồ án Chuyền Ngành/DACN/client/src/pages/Chat/Chat.jsx"],"names":["React","useRef","useState","ChatBox","Conversation","LogoSearch","NavIcons","useEffect","userChats","useDispatch","useSelector","io","Chat","dispatch","socket","user","state","authReducer","authData","chats","setChats","onlineUsers","setOnlineUsers","currentChat","setCurrentChat","sendMessage","setSendMessage","receivedMessage","setReceivedMessage","getChats","data","_id","error","console","log","current","emit","on","users","checkOnlineStatus","chat","chatMember","members","find","member","online","userId","map","width","alignSelf"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport ChatBox from \"../../components/ChatBox/ChatBox\";\r\nimport Conversation from \"../../components/Coversation/Conversation\";\r\nimport LogoSearch from \"../../components/LogoSearch/LogoSearch\";\r\nimport NavIcons from \"../../components/NavIcons/NavIcons\";\r\nimport \"./Chat.css\";\r\nimport { useEffect } from \"react\";\r\nimport { userChats } from \"../../api/ChatRequests\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { io } from \"socket.io-client\";\r\n\r\nconst Chat = () => {\r\n  const dispatch = useDispatch();\r\n  const socket = useRef();\r\n  const { user } = useSelector((state) => state.authReducer.authData);\r\n\r\n  const [chats, setChats] = useState([]);\r\n  const [onlineUsers, setOnlineUsers] = useState([]);\r\n  const [currentChat, setCurrentChat] = useState(null);\r\n  const [sendMessage, setSendMessage] = useState(null);\r\n  const [receivedMessage, setReceivedMessage] = useState(null);\r\n  // Get the chat in chat section\r\n  useEffect(() => {\r\n    const getChats = async () => {\r\n      try {\r\n        const { data } = await userChats(user._id);\r\n        setChats(data);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getChats();\r\n  }, [user._id]);\r\n\r\n  // Connect to Socket.io\r\n  useEffect(() => {\r\n    socket.current = io(\"ws://localhost:8800\");\r\n    socket.current.emit(\"new-user-add\", user._id);\r\n    socket.current.on(\"get-users\", (users) => {\r\n      setOnlineUsers(users);\r\n    });\r\n  }, [user]);\r\n\r\n  // Send Message to socket server\r\n  useEffect(() => {\r\n    if (sendMessage!==null) {\r\n      socket.current.emit(\"send-message\", sendMessage);}\r\n  }, [sendMessage]);\r\n\r\n\r\n  // Get the message from socket server\r\n  useEffect(() => {\r\n    socket.current.on(\"recieve-message\", (data) => {\r\n      console.log(data)\r\n      setReceivedMessage(data);\r\n    }\r\n\r\n    );\r\n  }, []);\r\n\r\n\r\n  const checkOnlineStatus = (chat) => {\r\n    const chatMember = chat.members.find((member) => member !== user._id);\r\n    const online = onlineUsers.find((user) => user.userId === chatMember);\r\n    return online ? true : false;\r\n  };\r\n\r\n  return (\r\n    <div className=\"Chat\">\r\n      {/* Left Side */}\r\n      <div className=\"Left-side-chat\">\r\n        <LogoSearch />\r\n        <div className=\"Chat-container\">\r\n          <h2>Chats</h2>\r\n          <div className=\"Chat-list\">\r\n            {chats.map((chat) => (\r\n              <div\r\n                onClick={() => {\r\n                  setCurrentChat(chat);\r\n                }}\r\n              >\r\n                <Conversation\r\n                  data={chat}\r\n                  currentUser={user._id}\r\n                  online={checkOnlineStatus(chat)}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right Side */}\r\n\r\n      <div className=\"Right-side-chat\">\r\n        <div style={{ width: \"20rem\", alignSelf: \"flex-end\" }}>\r\n          <NavIcons />\r\n        </div>\r\n        <ChatBox\r\n          chat={currentChat}\r\n          currentUser={user._id}\r\n          setSendMessage={setSendMessage}\r\n          receivedMessage={receivedMessage}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}