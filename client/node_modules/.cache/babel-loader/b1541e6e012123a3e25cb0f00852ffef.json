{"ast":null,"code":"const postReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    posts: null,\n    loading: false,\n    error: false,\n    uploading: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // belongs to PostShare.jsx\n    case \"UPLOAD_START\":\n      return { ...state,\n        error: false,\n        uploading: true\n      };\n\n    case \"UPLOAD_SUCCESS\":\n      return { ...state,\n        posts: [action.data, ...state.posts],\n        uploading: false,\n        error: false\n      };\n\n    case \"UPLOAD_FAIL\":\n      return { ...state,\n        uploading: false,\n        error: true\n      };\n    // belongs to Posts.jsx\n\n    case \"RETREIVING_START\":\n      return { ...state,\n        loading: true,\n        error: false\n      };\n\n    case \"RETREIVING_SUCCESS\":\n      return { ...state,\n        posts: action.data,\n        loading: false,\n        error: false\n      };\n\n    case \"RETREIVING_FAIL\":\n      return { ...state,\n        loading: false,\n        error: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default postReducer;","map":{"version":3,"sources":["D:/MERN-SocialMedia-ZAINKEEPSCODE/client/src/reducers/PostReducer.js"],"names":["postReducer","state","posts","loading","error","uploading","action","type","data"],"mappings":"AAAA,MAAMA,WAAW,GAAG,YAGf;AAAA,MAFHC,KAEG,uEAFK;AAAEC,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,OAAO,EAAE,KAAxB;AAA+BC,IAAAA,KAAK,EAAE,KAAtC;AAA6CC,IAAAA,SAAS,EAAE;AAAxD,GAEL;AAAA,MADHC,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE;AACA,SAAK,cAAL;AACE,aAAO,EAAE,GAAGN,KAAL;AAAYG,QAAAA,KAAK,EAAE,KAAnB;AAA0BC,QAAAA,SAAS,EAAE;AAArC,OAAP;;AACF,SAAK,gBAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYC,QAAAA,KAAK,EAAE,CAACI,MAAM,CAACE,IAAR,EAAc,GAAGP,KAAK,CAACC,KAAvB,CAAnB;AAAkDG,QAAAA,SAAS,EAAE,KAA7D;AAAoED,QAAAA,KAAK,EAAE;AAA3E,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYI,QAAAA,SAAS,EAAE,KAAvB;AAA8BD,QAAAA,KAAK,EAAE;AAArC,OAAP;AACF;;AACA,SAAK,kBAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYE,QAAAA,OAAO,EAAE,IAArB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAP;;AACF,SAAK,oBAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYC,QAAAA,KAAK,EAAEI,MAAM,CAACE,IAA1B;AAAgCL,QAAAA,OAAO,EAAE,KAAzC;AAAgDC,QAAAA,KAAK,EAAE;AAAvD,OAAP;;AACF,SAAK,iBAAL;AACE,aAAO,EAAE,GAAGH,KAAL;AAAYE,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,KAAK,EAAE;AAAnC,OAAP;;AACF;AACE,aAAOH,KAAP;AAhBJ;AAkBD,CAtBD;;AAwBA,eAAeD,WAAf","sourcesContent":["const postReducer = (\r\n  state = { posts: null, loading: false, error: false, uploading: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // belongs to PostShare.jsx\r\n    case \"UPLOAD_START\":\r\n      return { ...state, error: false, uploading: true };\r\n    case \"UPLOAD_SUCCESS\":\r\n      return { ...state, posts: [action.data, ...state.posts], uploading: false, error: false };\r\n    case \"UPLOAD_FAIL\":\r\n      return { ...state, uploading: false, error: true };\r\n    // belongs to Posts.jsx\r\n    case \"RETREIVING_START\":\r\n      return { ...state, loading: true, error: false };\r\n    case \"RETREIVING_SUCCESS\":\r\n      return { ...state, posts: action.data, loading: false, error: false };\r\n    case \"RETREIVING_FAIL\":\r\n      return { ...state, loading: false, error: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default postReducer;\r\n"]},"metadata":{},"sourceType":"module"}